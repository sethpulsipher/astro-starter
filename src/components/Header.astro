---
import navData from "@data/navData.json";
import { Icon } from "astro-icon/components";
import DarkModeToggle from "@components/DarkModeToggle.astro";
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id="navigation">
  <div class="container">
    <!--Nav Logo-->
    <a href="/" class="logo" aria-label="back to home">
      <img
        src="/assets/svgs/logo-black.svg"
        alt=""
        width="210"
        height="29"
        aria-hidden="true"
        decoding="async"
      />
    </a>
    <!--Navigation List-->
    <nav class="nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button
        class="toggle"
        id="mobile-menu-toggle"
        aria-expanded="false"
        aria-controls="expanded-ul"
        aria-label="Toggle mobile menu."
      >
        <div class="box" aria-hidden="true">
          <span class="line line1" aria-hidden="true"></span>
          <span class="line line2" aria-hidden="true"></span>
          <span class="line line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- If you want to use another navigation stitch and enjoy the benefits of dynamic routing, replace the .ul-wrapper in the navigation stitch with this one below -->
      <div class="ul-wrapper">
        <ul id="expanded-ul" class="ul">
          {
            navData.map((entry) => (
              <li class:list={["li", { dropdown: entry.children?.length > 0 }]}>
                {entry.children?.length > 0 ? (
                  // If entry has children in navData.json, create a button and a dropdown icon
                  <span
                    role="button"
                    aria-expanded="false"
                    aria-controls={`submenu-${entry.key}`}
                    aria-label="dropdown-label"
                    class:list={[
                      "li-link dropdown-button",
                      { active: Astro.url.pathname.includes(entry.url) },
                    ]}
                  >
                    {entry.key}
                    <Icon name="mdi:caret-down" size={20} class="drop-icon" />
                  </span>
                ) : (
                  // If entry does not have children in navData.json, create an anchor
                  <a
                    href={entry.url}
                    class:list={[
                      "li-link",
                      { active: Astro.url.pathname === entry.url },
                    ]}
                    aria-current={
                      Astro.url.pathname === entry.url ? "page" : undefined
                    }
                  >
                    {entry.key}
                  </a>
                )}

                {entry.children?.length > 0 && (
                  // If entry has children in navData.json, create a drop down menu
                  <ul id={`submenu-${entry.key}`} class="drop-ul">
                    {entry.children.map((child) => (
                      <li class="drop-li">
                        <a
                          href={child.url}
                          class="li-link drop-link"
                          aria-current={
                            Astro.url.pathname === child.url
                              ? "page"
                              : undefined
                          }
                        >
                          {child.key}
                        </a>
                      </li>
                    ))}
                  </ul>
                )}
              </li>
            ))
          }
        </ul>
      </div>
    </nav>
    <a href="/contact" class="button-solid nav-button">Contact Us</a>
    <!--Dark Mode toggle: remove component if you don't want to enable a dark mode toggle-->
    <DarkModeToggle />
  </div>
</header>
